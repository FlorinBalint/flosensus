syntax = "proto3";

option go_package = "github.com/FlorinBalint/flosensus/raft/proto";

message LogEntry {
  optional uint64 index=1;
	optional uint64 term=2;
	optional string command_id=3;
	optional bytes command=4;
}

message AppendEntriesRequest {
  optional uint64 term = 1;
	optional int32 leader_id=2;
	optional uint64 prev_log_index = 3;
	optional uint64 prev_log_term = 4;
	optional uint64 commit_index=5;
	repeated LogEntry Entries=6;
}

message AppendEntriesResponse {
  optional uint64 term = 1;
  optional bool success = 2;
  // Optimize fallback in case of disagreement with Leader
  optional uint64 commit_index = 3;
  optional uint64 index = 4;
}

message RequestVoteRequest {
  optional uint64 term = 1;
  optional int32 candidate_id = 2;
  optional uint64 last_log_index = 3;
  optional uint64 last_log_term = 4;
}

message RequestVoteResponse {
  optional uint64 term = 1;
  optional bool vote_granted = 2;
}

service Raft {

  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse) {}

  rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse) {}
}